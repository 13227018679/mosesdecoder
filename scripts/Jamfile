#See ../Jamroot for options.  
import option ;

build-project ems/biconcor ;
build-project training ;

with-giza = [ option.get "with-giza" ] ;
if $(with-giza) {
  rule check-for-bin ( name ) {
    if ! [ FILE_OPEN $(with-giza)/$(name) : "r" ] {
      echo "Did not find "$(with-giza)/$(name)"." ;
      echo "The with-giza directory should contain GIZA++, snt2cooc.out, and mkcls." ;
      echo "These are available from http://code.google.com/p/giza-pp/ :" ;
      echo "  wget https://giza-pp.googlecode.com/files/giza-pp.tgz" ;
      echo "  tar xzf giza-pp.tgz" ;
      echo "  cd giza-pp" ;
      echo "  make" ;
      echo "  cp GIZA++-v2/{GIZA++,plain2snt.out,snt2cooc.out,snt2plain.out,trainGIZA++.sh} mkcls-v2/mkcls ." ;
      exit "Then run bjam --with-giza=/path/to/giza-pp" : 1 ;
    }
  }

  constant WITH-GIZA : $(with-giza) ;

  check-for-bin GIZA++ ;
  check-for-bin snt2cooc.out ;
  check-for-bin mkcls ;
} else {
  echo "If you want scripts/training/train-model.perl, pass --with-giza=/path/to/giza-pp" ;
  constant WITH-GIZA : "no" ;
}

location = [ option.get "install-scripts" ] ;
if $(location) {
  location = $(location)$(GITTAG) ;

  #These two used to live in a tools directory.  
  install ghkm : training/phrase-extract/extract-ghkm//extract-ghkm : <location>$(location)/training/phrase-extract/extract-ghkm/tools ;
  install compactify : training/compact-rule-table//compactify : <location>$(location)/training/compact-rule-table/tools ;

  install phrase-extract : training/phrase-extract//released-programs : <location>$(location)/training/phrase-extract ;
  install lexical-reordering : training/lexical-reordering//score : <location>$(location)/training/lexical-reordering ;
  install symal : training/symal//symal : <location>$(location)/training/symal ;

  if $(WITH-GIZA) != no {
    install train-model : training//train-model.perl : <location>$(location)/training ;
  } else {
    alias train-model ;
  }

  install scripts : 
    analysis/README
    analysis/sentence-by-sentence.pl
    ems/experiment.machines
    ems/experiment.meta
    ems/experiment.perl
    ems/example/config.basic
    ems/example/config.factored
    ems/example/config.hierarchical
    ems/example/config.syntax
    ems/example/config.toy
    ems/example/data/nc-5k.en
    ems/example/data/nc-5k.fr
    ems/example/data/test-ref.en.sgm
    ems/example/data/test-src.fr.sgm
    ems/support/analysis.perl
    ems/support/berkeley-process.sh
    ems/support/berkeley-train.sh
    ems/support/consolidate-training-data.perl
    ems/support/generic-multicore-parallelizer.perl
    ems/support/generic-parallelizer.perl
    ems/support/input-from-sgm.perl
    ems/support/interpolate-lm.perl
    ems/support/reference-from-sgm.perl
    ems/support/remove-segmenation-markup.perl
    ems/support/report-experiment-scores.perl
    ems/support/reuse-weights.perl
    ems/support/run-command-on-multiple-refsets.perl
    ems/support/wrap-xml.perl
    ems/web/analysis.php
    ems/web/analysis_diff.php
    ems/web/comment.php
    ems/web/diff.php
    ems/web/index.php
    ems/web/lib.php
    ems/web/overview.php
    ems/web/setup
    ems/web/javascripts/builder.js
    ems/web/javascripts/controls.js
    ems/web/javascripts/dragdrop.js
    ems/web/javascripts/effects.js
    ems/web/javascripts/prototype.js
    ems/web/javascripts/scriptaculous.js
    ems/web/javascripts/slider.js
    ems/web/javascripts/sound.js
    ems/web/javascripts/unittest.js
    generic/compound-splitter.perl
    generic/extract-factors.pl
    generic/lopar2pos.pl
    generic/moses-parallel.pl
    generic/mteval-v12.pl
    generic/multi-bleu.perl
    generic/qsub-wrapper.pl
    README
    [ glob tokenizer/*.perl tokenizer/nonbreaking_prefixes/* ]
    training/absolutize_moses_model.pl
    training/build-generation-table.perl
    training/clean-corpus-n.perl
    training/clone_moses_model.pl
    training/filter-model-given-input.pl
    training/filter-rule-table.py
    training/zmert-moses.pl
    training/mert-moses.pl
    training/mert-moses-multi.pl
    training/postprocess-lopar.perl
    training/reduce_combine.pl
    training/combine_factors.pl
    training/symal/giza2bal.pl
    training/wrappers/parse-de-bitpar.perl
    training/wrappers/parse-en-collins.perl
    training/wrappers/make-factor-en-pos.mxpost.perl
    training/wrappers/make-factor-pos.tree-tagger.perl
    training/wrappers/make-factor-stem.perl
    [ glob recaser/*.perl ]
    : <install-source-root>. <location>$(location) ;

  alias install : ghkm compactify phrase-extract lexical-reordering symal scripts train-model ;
}
