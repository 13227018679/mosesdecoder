# Makefile.in generated by automake 1.11.1 from Makefile.am.
# moses/src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





pkgdatadir = $(datadir)/moses
pkgincludedir = $(includedir)/moses
pkglibdir = $(libdir)/moses
pkglibexecdir = $(libexecdir)/moses
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
#am__append_1 = rule.pb.h hypergraph.pb.h
am__append_2 = LanguageModelSRI.h \
                      LanguageModelParallelBackoff.h 

#am__append_3 = LanguageModelIRST.h
#am__append_4 = LanguageModelRandLM.h
#am__append_5 = LanguageModelInternal.h \
#		      NGramCollection.h \
#		      NGramNode.h

#am__append_6 = rule.pb.cc hypergraph.pb.cc
am__append_7 = LanguageModelSRI.cpp \
                      LanguageModelParallelBackoff.cpp 

#am__append_8 = LanguageModelIRST.cpp
#am__append_9 = LanguageModelRandLM.cpp
#am__append_10 = LanguageModelInternal.cpp \
#		      NGramCollection.cpp \
#		      NGramNode.cpp

am__append_11 = LanguageModelKen.cpp
subdir = moses/src
DIST_COMMON = $(am__libmoses_la_HEADERS_DIST) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_xmlrpc_c.m4 \
	$(top_srcdir)/m4/boost.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(libmoses_ladir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
libmoses_la_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am__libmoses_la_SOURCES_DIST = AlignmentInfo.cpp \
	BilingualDynSuffixArray.cpp BitmapContainer.cpp \
	ChartTranslationOption.cpp ChartTranslationOptionList.cpp \
	ConfusionNet.cpp DecodeFeature.cpp DecodeGraph.cpp \
	DecodeStep.cpp DecodeStepGeneration.cpp \
	DecodeStepTranslation.cpp Dictionary.cpp DotChart.cpp \
	DotChartOnDisk.cpp DummyScoreProducers.cpp \
	DynSAInclude/file.cpp DynSAInclude/vocab.cpp \
	DynSuffixArray.cpp FFState.cpp Factor.cpp FactorCollection.cpp \
	FactorTypeSet.cpp FeatureFunction.cpp FloydWarshall.cpp \
	GenerationDictionary.cpp GlobalLexicalModel.cpp hash.cpp \
	Hypothesis.cpp HypothesisStack.cpp \
	HypothesisStackCubePruning.cpp HypothesisStackNormal.cpp \
	InputFileStream.cpp InputType.cpp LMList.cpp LVoc.cpp \
	LanguageModel.cpp LanguageModelFactory.cpp \
	LanguageModelImplementation.cpp LanguageModelInternal.cpp \
	LanguageModelJoint.cpp LanguageModelMultiFactor.cpp \
	LanguageModelRemote.cpp LanguageModelSingleFactor.cpp \
	LanguageModelSkip.cpp LexicalReordering.cpp \
	LexicalReorderingState.cpp LexicalReorderingTable.cpp \
	Manager.cpp NGramCollection.cpp NGramNode.cpp PCNTools.cpp \
	Parameter.cpp PartialTranslOptColl.cpp Phrase.cpp \
	PhraseDictionary.cpp PhraseDictionaryDynSuffixArray.cpp \
	PhraseDictionaryMemory.cpp PhraseDictionarySCFG.cpp \
	PhraseDictionarySCFGChart.cpp PhraseDictionaryNode.cpp \
	PhraseDictionaryNodeSCFG.cpp PhraseDictionaryOnDisk.cpp \
	PhraseDictionaryOnDiskChart.cpp PhraseDictionaryTree.cpp \
	PhraseDictionaryTreeAdaptor.cpp PrefixTreeMap.cpp \
	ReorderingConstraint.cpp ReorderingStack.cpp \
	ScoreComponentCollection.cpp ScoreIndexManager.cpp \
	ScoreProducer.cpp Search.cpp SearchCubePruning.cpp \
	SearchNormal.cpp Sentence.cpp SentenceStats.cpp \
	SquareMatrix.cpp StaticData.cpp TargetPhrase.cpp \
	TargetPhraseCollection.cpp Timer.cpp TranslationOption.cpp \
	TranslationOptionCollection.cpp \
	TranslationOptionCollectionConfusionNet.cpp \
	TranslationOptionCollectionText.cpp TranslationOptionList.cpp \
	TranslationSystem.cpp TreeInput.cpp TrellisPath.cpp \
	TrellisPathCollection.cpp UserMessage.cpp Util.cpp Word.cpp \
	WordConsumed.cpp WordLattice.cpp WordsBitmap.cpp \
	WordsRange.cpp XmlOption.cpp rule.pb.cc hypergraph.pb.cc \
	LanguageModelSRI.cpp LanguageModelParallelBackoff.cpp \
	LanguageModelIRST.cpp LanguageModelRandLM.cpp \
	LanguageModelKen.cpp
#am__objects_1 = rule.pb.lo hypergraph.pb.lo
am__objects_2 = LanguageModelSRI.lo \
	LanguageModelParallelBackoff.lo
#am__objects_3 = LanguageModelIRST.lo
#am__objects_4 = LanguageModelRandLM.lo
#am__objects_5 = LanguageModelInternal.lo \
#	NGramCollection.lo NGramNode.lo
am__objects_6 = LanguageModelKen.lo
am_libmoses_la_OBJECTS = AlignmentInfo.lo BilingualDynSuffixArray.lo \
	BitmapContainer.lo ChartTranslationOption.lo \
	ChartTranslationOptionList.lo ConfusionNet.lo DecodeFeature.lo \
	DecodeGraph.lo DecodeStep.lo DecodeStepGeneration.lo \
	DecodeStepTranslation.lo Dictionary.lo DotChart.lo \
	DotChartOnDisk.lo DummyScoreProducers.lo file.lo vocab.lo \
	DynSuffixArray.lo FFState.lo Factor.lo FactorCollection.lo \
	FactorTypeSet.lo FeatureFunction.lo FloydWarshall.lo \
	GenerationDictionary.lo GlobalLexicalModel.lo hash.lo \
	Hypothesis.lo HypothesisStack.lo HypothesisStackCubePruning.lo \
	HypothesisStackNormal.lo InputFileStream.lo InputType.lo \
	LMList.lo LVoc.lo LanguageModel.lo LanguageModelFactory.lo \
	LanguageModelImplementation.lo LanguageModelInternal.lo \
	LanguageModelJoint.lo LanguageModelMultiFactor.lo \
	LanguageModelRemote.lo LanguageModelSingleFactor.lo \
	LanguageModelSkip.lo LexicalReordering.lo \
	LexicalReorderingState.lo LexicalReorderingTable.lo Manager.lo \
	NGramCollection.lo NGramNode.lo PCNTools.lo Parameter.lo \
	PartialTranslOptColl.lo Phrase.lo PhraseDictionary.lo \
	PhraseDictionaryDynSuffixArray.lo PhraseDictionaryMemory.lo \
	PhraseDictionarySCFG.lo PhraseDictionarySCFGChart.lo \
	PhraseDictionaryNode.lo PhraseDictionaryNodeSCFG.lo \
	PhraseDictionaryOnDisk.lo PhraseDictionaryOnDiskChart.lo \
	PhraseDictionaryTree.lo PhraseDictionaryTreeAdaptor.lo \
	PrefixTreeMap.lo ReorderingConstraint.lo ReorderingStack.lo \
	ScoreComponentCollection.lo ScoreIndexManager.lo \
	ScoreProducer.lo Search.lo SearchCubePruning.lo \
	SearchNormal.lo Sentence.lo SentenceStats.lo SquareMatrix.lo \
	StaticData.lo TargetPhrase.lo TargetPhraseCollection.lo \
	Timer.lo TranslationOption.lo TranslationOptionCollection.lo \
	TranslationOptionCollectionConfusionNet.lo \
	TranslationOptionCollectionText.lo TranslationOptionList.lo \
	TranslationSystem.lo TreeInput.lo TrellisPath.lo \
	TrellisPathCollection.lo UserMessage.lo Util.lo Word.lo \
	WordConsumed.lo WordLattice.lo WordsBitmap.lo WordsRange.lo \
	XmlOption.lo $(am__objects_1) $(am__objects_2) \
	$(am__objects_3) $(am__objects_4) $(am__objects_5) \
	$(am__objects_6)
libmoses_la_OBJECTS = $(am_libmoses_la_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libmoses_la_SOURCES)
DIST_SOURCES = $(am__libmoses_la_SOURCES_DIST)
am__libmoses_la_HEADERS_DIST = AlignmentInfo.h \
	BilingualDynSuffixArray.h BitmapContainer.h CellCollection.h \
	ChartTranslationOption.h ChartTranslationOptionList.h \
	ConfusionNet.h DecodeFeature.h DecodeGraph.h DecodeStep.h \
	DecodeStepGeneration.h DecodeStepTranslation.h Dictionary.h \
	DotChart.h DotChartOnDisk.h DummyScoreProducers.h \
	DynSAInclude/file.h DynSAInclude/vocab.h DynSuffixArray.h \
	FFState.h Factor.h FactorCollection.h FactorTypeSet.h \
	FeatureFunction.h File.h FilePtr.h FloydWarshall.h \
	GenerationDictionary.h GlobalLexicalModel.h gzfilebuf.h hash.h \
	Hypothesis.h HypothesisStack.h HypothesisStackCubePruning.h \
	HypothesisStackNormal.h InputFileStream.h InputType.h LMList.h \
	LVoc.h LanguageModel.h LanguageModelJoint.h \
	LanguageModelFactory.h LanguageModelImplementation.h \
	LanguageModelInternal.h LanguageModelMultiFactor.h \
	LanguageModelRemote.h LanguageModelSingleFactor.h \
	LanguageModelSkip.h LexicalReordering.h \
	LexicalReorderingState.h LexicalReorderingTable.h Manager.h \
	NonTerminal.h ObjectPool.h PCNTools.h PDTAimp.h Parameter.h \
	PartialTranslOptColl.h Phrase.h PhraseDictionary.h \
	PhraseDictionaryDynSuffixArray.h PhraseDictionaryMemory.h \
	PhraseDictionarySCFG.h PhraseDictionaryNode.h \
	PhraseDictionaryNodeSCFG.h PhraseDictionaryOnDisk.h \
	PhraseDictionaryTree.h PhraseDictionaryTreeAdaptor.h \
	PrefixTree.h PrefixTreeMap.h ReorderingConstraint.h \
	ReorderingStack.h ScoreComponentCollection.h \
	ScoreIndexManager.h ScoreProducer.h Search.h \
	SearchCubePruning.h SearchNormal.h Sentence.h SentenceStats.h \
	SquareMatrix.h StaticData.h TargetPhrase.h \
	TargetPhraseCollection.h Timer.h TranslationOption.h \
	TranslationOptionCollection.h \
	TranslationOptionCollectionConfusionNet.h \
	TranslationOptionCollectionText.h TranslationOptionList.h \
	TranslationSystem.h TreeInput.h TrellisPath.h \
	TrellisPathCollection.h TrellisPathList.h TypeDef.h \
	UniqueObject.h UserMessage.h Util.h Word.h WordConsumed.h \
	WordLattice.h WordsBitmap.h WordsRange.h XmlOption.h rule.pb.h \
	hypergraph.pb.h LanguageModelSRI.h \
	LanguageModelParallelBackoff.h LanguageModelIRST.h \
	LanguageModelRandLM.h NGramCollection.h NGramNode.h
HEADERS = $(libmoses_la_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /lium/buster1/servan/Tools/Sources/moses_mertTER.RC/missing --run aclocal-1.11
AMTAR = ${SHELL} /lium/buster1/servan/Tools/Sources/moses_mertTER.RC/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /lium/buster1/servan/Tools/Sources/moses_mertTER.RC/missing --run autoconf
AUTOHEADER = ${SHELL} /lium/buster1/servan/Tools/Sources/moses_mertTER.RC/missing --run autoheader
AUTOMAKE = ${SHELL} /lium/buster1/servan/Tools/Sources/moses_mertTER.RC/missing --run automake-1.11
AWK = gawk
BOOST_CPPFLAGS = -I/lium/buster1/servan/Tools/include -pthread
BOOST_ROOT = 
BOOST_THREAD_LDFLAGS = -L/lium/buster1/servan/Tools/lib -R/lium/buster1/servan/Tools/lib
BOOST_THREAD_LIBS = -lboost_thread-mt -pthread
CC = /lium/buster1/servan/Tools/bin/gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = /lium/buster1/servan/Tools/bin/gcc -E
CPPFLAGS =  -DTRACE_ENABLE=1 -DWITH_THREADS -I/usr/local/srilm_1.5.12/include -I/lium/buster1/servan/Tools/Sources/moses_mertTER.RC/kenlm
CXX = /lium/buster1/servan/Tools/bin/c++
CXXCPP = /lium/buster1/servan/Tools/bin/c++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DISTCHECK_CONFIGURE_FLAGS =  '--with-boost=/lium/buster1/servan/Tools'
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
KENLM_DEPS = $(top_srcdir)/kenlm/libkenlm.la
KENLM_LDFLAGS = -L$(top_srcdir)/kenlm -lkenlm -lz
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS =  -L/usr/local/srilm_1.5.12/lib/i686 -L/usr/local/srilm_1.5.12/flm/obj/i686
LIBOBJS = 
LIBS = -loolm  -loolm -ldstruct -lmisc -lflm -lz
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /lium/buster1/servan/Tools/Sources/moses_mertTER.RC/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = moses
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_URL = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PROTOC = 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 0.1
XMLRPC_C_CPPFLAGS = 
XMLRPC_C_LIBS = 
abs_builddir = /lium/buster1/servan/Tools/Sources/moses_mertTER.RC/moses/src
abs_srcdir = /lium/buster1/servan/Tools/Sources/moses_mertTER.RC/moses/src
abs_top_builddir = /lium/buster1/servan/Tools/Sources/moses_mertTER.RC
abs_top_srcdir = /lium/buster1/servan/Tools/Sources/moses_mertTER.RC
ac_ct_CC = /lium/buster1/servan/Tools/bin/gcc
ac_ct_CXX = 
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /lium/buster1/servan/Tools/Sources/moses_mertTER.RC/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
lib_LTLIBRARIES = libmoses.la
AM_CPPFLAGS = -W -Wall -ffor-scope -D_FILE_OFFSET_BITS=64 -D_LARGE_FILES $(BOOST_CPPFLAGS)
libmoses_ladir = ${includedir}
libmoses_la_HEADERS = AlignmentInfo.h BilingualDynSuffixArray.h \
	BitmapContainer.h CellCollection.h ChartTranslationOption.h \
	ChartTranslationOptionList.h ConfusionNet.h DecodeFeature.h \
	DecodeGraph.h DecodeStep.h DecodeStepGeneration.h \
	DecodeStepTranslation.h Dictionary.h DotChart.h \
	DotChartOnDisk.h DummyScoreProducers.h DynSAInclude/file.h \
	DynSAInclude/vocab.h DynSuffixArray.h FFState.h Factor.h \
	FactorCollection.h FactorTypeSet.h FeatureFunction.h File.h \
	FilePtr.h FloydWarshall.h GenerationDictionary.h \
	GlobalLexicalModel.h gzfilebuf.h hash.h Hypothesis.h \
	HypothesisStack.h HypothesisStackCubePruning.h \
	HypothesisStackNormal.h InputFileStream.h InputType.h LMList.h \
	LVoc.h LanguageModel.h LanguageModelJoint.h \
	LanguageModelFactory.h LanguageModelImplementation.h \
	LanguageModelInternal.h LanguageModelMultiFactor.h \
	LanguageModelRemote.h LanguageModelSingleFactor.h \
	LanguageModelSkip.h LexicalReordering.h \
	LexicalReorderingState.h LexicalReorderingTable.h Manager.h \
	NonTerminal.h ObjectPool.h PCNTools.h PDTAimp.h Parameter.h \
	PartialTranslOptColl.h Phrase.h PhraseDictionary.h \
	PhraseDictionaryDynSuffixArray.h PhraseDictionaryMemory.h \
	PhraseDictionarySCFG.h PhraseDictionaryNode.h \
	PhraseDictionaryNodeSCFG.h PhraseDictionaryOnDisk.h \
	PhraseDictionaryTree.h PhraseDictionaryTreeAdaptor.h \
	PrefixTree.h PrefixTreeMap.h ReorderingConstraint.h \
	ReorderingStack.h ScoreComponentCollection.h \
	ScoreIndexManager.h ScoreProducer.h Search.h \
	SearchCubePruning.h SearchNormal.h Sentence.h SentenceStats.h \
	SquareMatrix.h StaticData.h TargetPhrase.h \
	TargetPhraseCollection.h Timer.h TranslationOption.h \
	TranslationOptionCollection.h \
	TranslationOptionCollectionConfusionNet.h \
	TranslationOptionCollectionText.h TranslationOptionList.h \
	TranslationSystem.h TreeInput.h TrellisPath.h \
	TrellisPathCollection.h TrellisPathList.h TypeDef.h \
	UniqueObject.h UserMessage.h Util.h Word.h WordConsumed.h \
	WordLattice.h WordsBitmap.h WordsRange.h XmlOption.h \
	$(am__append_1) $(am__append_2) $(am__append_3) \
	$(am__append_4) $(am__append_5)
libmoses_la_SOURCES = AlignmentInfo.cpp BilingualDynSuffixArray.cpp \
	BitmapContainer.cpp ChartTranslationOption.cpp \
	ChartTranslationOptionList.cpp ConfusionNet.cpp \
	DecodeFeature.cpp DecodeGraph.cpp DecodeStep.cpp \
	DecodeStepGeneration.cpp DecodeStepTranslation.cpp \
	Dictionary.cpp DotChart.cpp DotChartOnDisk.cpp \
	DummyScoreProducers.cpp DynSAInclude/file.cpp \
	DynSAInclude/vocab.cpp DynSuffixArray.cpp FFState.cpp \
	Factor.cpp FactorCollection.cpp FactorTypeSet.cpp \
	FeatureFunction.cpp FloydWarshall.cpp GenerationDictionary.cpp \
	GlobalLexicalModel.cpp hash.cpp Hypothesis.cpp \
	HypothesisStack.cpp HypothesisStackCubePruning.cpp \
	HypothesisStackNormal.cpp InputFileStream.cpp InputType.cpp \
	LMList.cpp LVoc.cpp LanguageModel.cpp LanguageModelFactory.cpp \
	LanguageModelImplementation.cpp LanguageModelInternal.cpp \
	LanguageModelJoint.cpp LanguageModelMultiFactor.cpp \
	LanguageModelRemote.cpp LanguageModelSingleFactor.cpp \
	LanguageModelSkip.cpp LexicalReordering.cpp \
	LexicalReorderingState.cpp LexicalReorderingTable.cpp \
	Manager.cpp NGramCollection.cpp NGramNode.cpp PCNTools.cpp \
	Parameter.cpp PartialTranslOptColl.cpp Phrase.cpp \
	PhraseDictionary.cpp PhraseDictionaryDynSuffixArray.cpp \
	PhraseDictionaryMemory.cpp PhraseDictionarySCFG.cpp \
	PhraseDictionarySCFGChart.cpp PhraseDictionaryNode.cpp \
	PhraseDictionaryNodeSCFG.cpp PhraseDictionaryOnDisk.cpp \
	PhraseDictionaryOnDiskChart.cpp PhraseDictionaryTree.cpp \
	PhraseDictionaryTreeAdaptor.cpp PrefixTreeMap.cpp \
	ReorderingConstraint.cpp ReorderingStack.cpp \
	ScoreComponentCollection.cpp ScoreIndexManager.cpp \
	ScoreProducer.cpp Search.cpp SearchCubePruning.cpp \
	SearchNormal.cpp Sentence.cpp SentenceStats.cpp \
	SquareMatrix.cpp StaticData.cpp TargetPhrase.cpp \
	TargetPhraseCollection.cpp Timer.cpp TranslationOption.cpp \
	TranslationOptionCollection.cpp \
	TranslationOptionCollectionConfusionNet.cpp \
	TranslationOptionCollectionText.cpp TranslationOptionList.cpp \
	TranslationSystem.cpp TreeInput.cpp TrellisPath.cpp \
	TrellisPathCollection.cpp UserMessage.cpp Util.cpp Word.cpp \
	WordConsumed.cpp WordLattice.cpp WordsBitmap.cpp \
	WordsRange.cpp XmlOption.cpp $(am__append_6) $(am__append_7) \
	$(am__append_8) $(am__append_9) $(am__append_10) \
	$(am__append_11)
#BUILT_SOURCES = \
#  rule.pb.h \
#  rule.pb.cc \
#  hypergraph.pb.h \
#  hypergraph.pb.cc

#CLEANFILES = $(BUILT_SOURCES)
#SUFFIXES = .proto
libmoses_la_LIBADD = $(BOOST_THREAD_LDFLAGS) $(BOOST_THREAD_LIBS)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .proto .cc .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu moses/src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu moses/src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libmoses.la: $(libmoses_la_OBJECTS) $(libmoses_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libmoses_la_OBJECTS) $(libmoses_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/AlignmentInfo.Plo
include ./$(DEPDIR)/BilingualDynSuffixArray.Plo
include ./$(DEPDIR)/BitmapContainer.Plo
include ./$(DEPDIR)/ChartTranslationOption.Plo
include ./$(DEPDIR)/ChartTranslationOptionList.Plo
include ./$(DEPDIR)/ConfusionNet.Plo
include ./$(DEPDIR)/DecodeFeature.Plo
include ./$(DEPDIR)/DecodeGraph.Plo
include ./$(DEPDIR)/DecodeStep.Plo
include ./$(DEPDIR)/DecodeStepGeneration.Plo
include ./$(DEPDIR)/DecodeStepTranslation.Plo
include ./$(DEPDIR)/Dictionary.Plo
include ./$(DEPDIR)/DotChart.Plo
include ./$(DEPDIR)/DotChartOnDisk.Plo
include ./$(DEPDIR)/DummyScoreProducers.Plo
include ./$(DEPDIR)/DynSuffixArray.Plo
include ./$(DEPDIR)/FFState.Plo
include ./$(DEPDIR)/Factor.Plo
include ./$(DEPDIR)/FactorCollection.Plo
include ./$(DEPDIR)/FactorTypeSet.Plo
include ./$(DEPDIR)/FeatureFunction.Plo
include ./$(DEPDIR)/FloydWarshall.Plo
include ./$(DEPDIR)/GenerationDictionary.Plo
include ./$(DEPDIR)/GlobalLexicalModel.Plo
include ./$(DEPDIR)/Hypothesis.Plo
include ./$(DEPDIR)/HypothesisStack.Plo
include ./$(DEPDIR)/HypothesisStackCubePruning.Plo
include ./$(DEPDIR)/HypothesisStackNormal.Plo
include ./$(DEPDIR)/InputFileStream.Plo
include ./$(DEPDIR)/InputType.Plo
include ./$(DEPDIR)/LMList.Plo
include ./$(DEPDIR)/LVoc.Plo
include ./$(DEPDIR)/LanguageModel.Plo
include ./$(DEPDIR)/LanguageModelFactory.Plo
include ./$(DEPDIR)/LanguageModelIRST.Plo
include ./$(DEPDIR)/LanguageModelImplementation.Plo
include ./$(DEPDIR)/LanguageModelInternal.Plo
include ./$(DEPDIR)/LanguageModelJoint.Plo
include ./$(DEPDIR)/LanguageModelKen.Plo
include ./$(DEPDIR)/LanguageModelMultiFactor.Plo
include ./$(DEPDIR)/LanguageModelParallelBackoff.Plo
include ./$(DEPDIR)/LanguageModelRandLM.Plo
include ./$(DEPDIR)/LanguageModelRemote.Plo
include ./$(DEPDIR)/LanguageModelSRI.Plo
include ./$(DEPDIR)/LanguageModelSingleFactor.Plo
include ./$(DEPDIR)/LanguageModelSkip.Plo
include ./$(DEPDIR)/LexicalReordering.Plo
include ./$(DEPDIR)/LexicalReorderingState.Plo
include ./$(DEPDIR)/LexicalReorderingTable.Plo
include ./$(DEPDIR)/Manager.Plo
include ./$(DEPDIR)/NGramCollection.Plo
include ./$(DEPDIR)/NGramNode.Plo
include ./$(DEPDIR)/PCNTools.Plo
include ./$(DEPDIR)/Parameter.Plo
include ./$(DEPDIR)/PartialTranslOptColl.Plo
include ./$(DEPDIR)/Phrase.Plo
include ./$(DEPDIR)/PhraseDictionary.Plo
include ./$(DEPDIR)/PhraseDictionaryDynSuffixArray.Plo
include ./$(DEPDIR)/PhraseDictionaryMemory.Plo
include ./$(DEPDIR)/PhraseDictionaryNode.Plo
include ./$(DEPDIR)/PhraseDictionaryNodeSCFG.Plo
include ./$(DEPDIR)/PhraseDictionaryOnDisk.Plo
include ./$(DEPDIR)/PhraseDictionaryOnDiskChart.Plo
include ./$(DEPDIR)/PhraseDictionarySCFG.Plo
include ./$(DEPDIR)/PhraseDictionarySCFGChart.Plo
include ./$(DEPDIR)/PhraseDictionaryTree.Plo
include ./$(DEPDIR)/PhraseDictionaryTreeAdaptor.Plo
include ./$(DEPDIR)/PrefixTreeMap.Plo
include ./$(DEPDIR)/ReorderingConstraint.Plo
include ./$(DEPDIR)/ReorderingStack.Plo
include ./$(DEPDIR)/ScoreComponentCollection.Plo
include ./$(DEPDIR)/ScoreIndexManager.Plo
include ./$(DEPDIR)/ScoreProducer.Plo
include ./$(DEPDIR)/Search.Plo
include ./$(DEPDIR)/SearchCubePruning.Plo
include ./$(DEPDIR)/SearchNormal.Plo
include ./$(DEPDIR)/Sentence.Plo
include ./$(DEPDIR)/SentenceStats.Plo
include ./$(DEPDIR)/SquareMatrix.Plo
include ./$(DEPDIR)/StaticData.Plo
include ./$(DEPDIR)/TargetPhrase.Plo
include ./$(DEPDIR)/TargetPhraseCollection.Plo
include ./$(DEPDIR)/Timer.Plo
include ./$(DEPDIR)/TranslationOption.Plo
include ./$(DEPDIR)/TranslationOptionCollection.Plo
include ./$(DEPDIR)/TranslationOptionCollectionConfusionNet.Plo
include ./$(DEPDIR)/TranslationOptionCollectionText.Plo
include ./$(DEPDIR)/TranslationOptionList.Plo
include ./$(DEPDIR)/TranslationSystem.Plo
include ./$(DEPDIR)/TreeInput.Plo
include ./$(DEPDIR)/TrellisPath.Plo
include ./$(DEPDIR)/TrellisPathCollection.Plo
include ./$(DEPDIR)/UserMessage.Plo
include ./$(DEPDIR)/Util.Plo
include ./$(DEPDIR)/Word.Plo
include ./$(DEPDIR)/WordConsumed.Plo
include ./$(DEPDIR)/WordLattice.Plo
include ./$(DEPDIR)/WordsBitmap.Plo
include ./$(DEPDIR)/WordsRange.Plo
include ./$(DEPDIR)/XmlOption.Plo
include ./$(DEPDIR)/file.Plo
include ./$(DEPDIR)/hash.Plo
include ./$(DEPDIR)/hypergraph.pb.Plo
include ./$(DEPDIR)/rule.pb.Plo
include ./$(DEPDIR)/vocab.Plo

.cc.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

file.lo: DynSAInclude/file.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT file.lo -MD -MP -MF $(DEPDIR)/file.Tpo -c -o file.lo `test -f 'DynSAInclude/file.cpp' || echo '$(srcdir)/'`DynSAInclude/file.cpp
	$(am__mv) $(DEPDIR)/file.Tpo $(DEPDIR)/file.Plo
#	source='DynSAInclude/file.cpp' object='file.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o file.lo `test -f 'DynSAInclude/file.cpp' || echo '$(srcdir)/'`DynSAInclude/file.cpp

vocab.lo: DynSAInclude/vocab.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT vocab.lo -MD -MP -MF $(DEPDIR)/vocab.Tpo -c -o vocab.lo `test -f 'DynSAInclude/vocab.cpp' || echo '$(srcdir)/'`DynSAInclude/vocab.cpp
	$(am__mv) $(DEPDIR)/vocab.Tpo $(DEPDIR)/vocab.Plo
#	source='DynSAInclude/vocab.cpp' object='vocab.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o vocab.lo `test -f 'DynSAInclude/vocab.cpp' || echo '$(srcdir)/'`DynSAInclude/vocab.cpp

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-libmoses_laHEADERS: $(libmoses_la_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(libmoses_ladir)" || $(MKDIR_P) "$(DESTDIR)$(libmoses_ladir)"
	@list='$(libmoses_la_HEADERS)'; test -n "$(libmoses_ladir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(libmoses_ladir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(libmoses_ladir)" || exit $$?; \
	done

uninstall-libmoses_laHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libmoses_la_HEADERS)'; test -n "$(libmoses_ladir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(libmoses_ladir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(libmoses_ladir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(libmoses_ladir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-libmoses_laHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLTLIBRARIES uninstall-libmoses_laHEADERS

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-libLTLIBRARIES install-libmoses_laHEADERS install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-libLTLIBRARIES uninstall-libmoses_laHEADERS


#rule.pb.cc: rule.proto
#	 --cpp_out=. $<
#rule.pb.h: rule.proto
#	 --cpp_out=. $<

#hypergraph.pb.cc: hypergraph.proto
#	 --cpp_out=. $<			
#hypergraph.pb.h: hypergraph.proto
#	 --cpp_out=. $<			

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
