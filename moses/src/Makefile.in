# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
@PROTOBUF_TRUE@am__append_1 = rule.pb.h hypergraph.pb.h
@SRI_LM_TRUE@am__append_2 = LanguageModelSRI.h \
@SRI_LM_TRUE@                      LanguageModelParallelBackoff.h 

@IRST_LM_TRUE@am__append_3 = LanguageModelIRST.h
@RAND_LM_TRUE@am__append_4 = LanguageModelRandLM.h
@INTERNAL_LM_TRUE@am__append_5 = LanguageModelInternal.h \
@INTERNAL_LM_TRUE@		      NGramCollection.h \
@INTERNAL_LM_TRUE@		      NGramNode.h

@PROTOBUF_TRUE@am__append_6 = rule.pb.cc hypergraph.pb.cc
@SRI_LM_TRUE@am__append_7 = LanguageModelSRI.cpp \
@SRI_LM_TRUE@                      LanguageModelParallelBackoff.cpp 

@IRST_LM_TRUE@am__append_8 = LanguageModelIRST.cpp
@RAND_LM_TRUE@am__append_9 = LanguageModelRandLM.cpp
@INTERNAL_LM_TRUE@am__append_10 = LanguageModelInternal.cpp \
@INTERNAL_LM_TRUE@		      NGramCollection.cpp \
@INTERNAL_LM_TRUE@		      NGramNode.cpp

@KEN_LM_TRUE@am__append_11 = LanguageModelKen.cpp
subdir = moses/src
DIST_COMMON = $(am__libmoses_la_HEADERS_DIST) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_xmlrpc_c.m4 \
	$(top_srcdir)/m4/boost.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(libmoses_ladir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
libmoses_la_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am__libmoses_la_SOURCES_DIST = AlignmentInfo.cpp \
	BilingualDynSuffixArray.cpp BitmapContainer.cpp \
	ChartTranslationOption.cpp ChartTranslationOptionList.cpp \
	ConfusionNet.cpp DecodeFeature.cpp DecodeGraph.cpp \
	DecodeStep.cpp DecodeStepGeneration.cpp \
	DecodeStepTranslation.cpp Dictionary.cpp DotChart.cpp \
	DotChartOnDisk.cpp DummyScoreProducers.cpp \
	DynSAInclude/file.cpp DynSAInclude/vocab.cpp \
	DynSuffixArray.cpp FFState.cpp Factor.cpp FactorCollection.cpp \
	FactorTypeSet.cpp FeatureFunction.cpp FloydWarshall.cpp \
	GenerationDictionary.cpp GlobalLexicalModel.cpp hash.cpp \
	Hypothesis.cpp HypothesisStack.cpp \
	HypothesisStackCubePruning.cpp HypothesisStackNormal.cpp \
	InputFileStream.cpp InputType.cpp LMList.cpp LVoc.cpp \
	LanguageModel.cpp LanguageModelFactory.cpp \
	LanguageModelImplementation.cpp LanguageModelInternal.cpp \
	LanguageModelJoint.cpp LanguageModelMultiFactor.cpp \
	LanguageModelRemote.cpp LanguageModelSingleFactor.cpp \
	LanguageModelSkip.cpp LexicalReordering.cpp \
	LexicalReorderingState.cpp LexicalReorderingTable.cpp \
	Manager.cpp NGramCollection.cpp NGramNode.cpp PCNTools.cpp \
	Parameter.cpp PartialTranslOptColl.cpp Phrase.cpp \
	PhraseDictionary.cpp PhraseDictionaryDynSuffixArray.cpp \
	PhraseDictionaryMemory.cpp PhraseDictionarySCFG.cpp \
	PhraseDictionarySCFGChart.cpp PhraseDictionaryNode.cpp \
	PhraseDictionaryNodeSCFG.cpp PhraseDictionaryOnDisk.cpp \
	PhraseDictionaryOnDiskChart.cpp PhraseDictionaryTree.cpp \
	PhraseDictionaryTreeAdaptor.cpp PrefixTreeMap.cpp \
	ReorderingConstraint.cpp ReorderingStack.cpp \
	ScoreComponentCollection.cpp ScoreIndexManager.cpp \
	ScoreProducer.cpp Search.cpp SearchCubePruning.cpp \
	SearchNormal.cpp Sentence.cpp SentenceStats.cpp \
	SquareMatrix.cpp StaticData.cpp TargetPhrase.cpp \
	TargetPhraseCollection.cpp Timer.cpp TranslationOption.cpp \
	TranslationOptionCollection.cpp \
	TranslationOptionCollectionConfusionNet.cpp \
	TranslationOptionCollectionText.cpp TranslationOptionList.cpp \
	TranslationSystem.cpp TreeInput.cpp TrellisPath.cpp \
	TrellisPathCollection.cpp UserMessage.cpp Util.cpp Word.cpp \
	WordConsumed.cpp WordLattice.cpp WordsBitmap.cpp \
	WordsRange.cpp XmlOption.cpp rule.pb.cc hypergraph.pb.cc \
	LanguageModelSRI.cpp LanguageModelParallelBackoff.cpp \
	LanguageModelIRST.cpp LanguageModelRandLM.cpp \
	LanguageModelKen.cpp
@PROTOBUF_TRUE@am__objects_1 = rule.pb.lo hypergraph.pb.lo
@SRI_LM_TRUE@am__objects_2 = LanguageModelSRI.lo \
@SRI_LM_TRUE@	LanguageModelParallelBackoff.lo
@IRST_LM_TRUE@am__objects_3 = LanguageModelIRST.lo
@RAND_LM_TRUE@am__objects_4 = LanguageModelRandLM.lo
@INTERNAL_LM_TRUE@am__objects_5 = LanguageModelInternal.lo \
@INTERNAL_LM_TRUE@	NGramCollection.lo NGramNode.lo
@KEN_LM_TRUE@am__objects_6 = LanguageModelKen.lo
am_libmoses_la_OBJECTS = AlignmentInfo.lo BilingualDynSuffixArray.lo \
	BitmapContainer.lo ChartTranslationOption.lo \
	ChartTranslationOptionList.lo ConfusionNet.lo DecodeFeature.lo \
	DecodeGraph.lo DecodeStep.lo DecodeStepGeneration.lo \
	DecodeStepTranslation.lo Dictionary.lo DotChart.lo \
	DotChartOnDisk.lo DummyScoreProducers.lo file.lo vocab.lo \
	DynSuffixArray.lo FFState.lo Factor.lo FactorCollection.lo \
	FactorTypeSet.lo FeatureFunction.lo FloydWarshall.lo \
	GenerationDictionary.lo GlobalLexicalModel.lo hash.lo \
	Hypothesis.lo HypothesisStack.lo HypothesisStackCubePruning.lo \
	HypothesisStackNormal.lo InputFileStream.lo InputType.lo \
	LMList.lo LVoc.lo LanguageModel.lo LanguageModelFactory.lo \
	LanguageModelImplementation.lo LanguageModelInternal.lo \
	LanguageModelJoint.lo LanguageModelMultiFactor.lo \
	LanguageModelRemote.lo LanguageModelSingleFactor.lo \
	LanguageModelSkip.lo LexicalReordering.lo \
	LexicalReorderingState.lo LexicalReorderingTable.lo Manager.lo \
	NGramCollection.lo NGramNode.lo PCNTools.lo Parameter.lo \
	PartialTranslOptColl.lo Phrase.lo PhraseDictionary.lo \
	PhraseDictionaryDynSuffixArray.lo PhraseDictionaryMemory.lo \
	PhraseDictionarySCFG.lo PhraseDictionarySCFGChart.lo \
	PhraseDictionaryNode.lo PhraseDictionaryNodeSCFG.lo \
	PhraseDictionaryOnDisk.lo PhraseDictionaryOnDiskChart.lo \
	PhraseDictionaryTree.lo PhraseDictionaryTreeAdaptor.lo \
	PrefixTreeMap.lo ReorderingConstraint.lo ReorderingStack.lo \
	ScoreComponentCollection.lo ScoreIndexManager.lo \
	ScoreProducer.lo Search.lo SearchCubePruning.lo \
	SearchNormal.lo Sentence.lo SentenceStats.lo SquareMatrix.lo \
	StaticData.lo TargetPhrase.lo TargetPhraseCollection.lo \
	Timer.lo TranslationOption.lo TranslationOptionCollection.lo \
	TranslationOptionCollectionConfusionNet.lo \
	TranslationOptionCollectionText.lo TranslationOptionList.lo \
	TranslationSystem.lo TreeInput.lo TrellisPath.lo \
	TrellisPathCollection.lo UserMessage.lo Util.lo Word.lo \
	WordConsumed.lo WordLattice.lo WordsBitmap.lo WordsRange.lo \
	XmlOption.lo $(am__objects_1) $(am__objects_2) \
	$(am__objects_3) $(am__objects_4) $(am__objects_5) \
	$(am__objects_6)
libmoses_la_OBJECTS = $(am_libmoses_la_OBJECTS)
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libmoses_la_SOURCES)
DIST_SOURCES = $(am__libmoses_la_SOURCES_DIST)
am__libmoses_la_HEADERS_DIST = AlignmentInfo.h \
	BilingualDynSuffixArray.h BitmapContainer.h CellCollection.h \
	ChartTranslationOption.h ChartTranslationOptionList.h \
	ConfusionNet.h DecodeFeature.h DecodeGraph.h DecodeStep.h \
	DecodeStepGeneration.h DecodeStepTranslation.h Dictionary.h \
	DotChart.h DotChartOnDisk.h DummyScoreProducers.h \
	DynSAInclude/file.h DynSAInclude/vocab.h DynSuffixArray.h \
	FFState.h Factor.h FactorCollection.h FactorTypeSet.h \
	FeatureFunction.h File.h FilePtr.h FloydWarshall.h \
	GenerationDictionary.h GlobalLexicalModel.h gzfilebuf.h hash.h \
	Hypothesis.h HypothesisStack.h HypothesisStackCubePruning.h \
	HypothesisStackNormal.h InputFileStream.h InputType.h LMList.h \
	LVoc.h LanguageModel.h LanguageModelJoint.h \
	LanguageModelFactory.h LanguageModelImplementation.h \
	LanguageModelInternal.h LanguageModelMultiFactor.h \
	LanguageModelRemote.h LanguageModelSingleFactor.h \
	LanguageModelSkip.h LexicalReordering.h \
	LexicalReorderingState.h LexicalReorderingTable.h Manager.h \
	NonTerminal.h ObjectPool.h PCNTools.h PDTAimp.h Parameter.h \
	PartialTranslOptColl.h Phrase.h PhraseDictionary.h \
	PhraseDictionaryDynSuffixArray.h PhraseDictionaryMemory.h \
	PhraseDictionarySCFG.h PhraseDictionaryNode.h \
	PhraseDictionaryNodeSCFG.h PhraseDictionaryOnDisk.h \
	PhraseDictionaryTree.h PhraseDictionaryTreeAdaptor.h \
	PrefixTree.h PrefixTreeMap.h ReorderingConstraint.h \
	ReorderingStack.h ScoreComponentCollection.h \
	ScoreIndexManager.h ScoreProducer.h Search.h \
	SearchCubePruning.h SearchNormal.h Sentence.h SentenceStats.h \
	SquareMatrix.h StaticData.h TargetPhrase.h \
	TargetPhraseCollection.h Timer.h TranslationOption.h \
	TranslationOptionCollection.h \
	TranslationOptionCollectionConfusionNet.h \
	TranslationOptionCollectionText.h TranslationOptionList.h \
	TranslationSystem.h TreeInput.h TrellisPath.h \
	TrellisPathCollection.h TrellisPathList.h TypeDef.h \
	UniqueObject.h UserMessage.h Util.h Word.h WordConsumed.h \
	WordLattice.h WordsBitmap.h WordsRange.h XmlOption.h rule.pb.h \
	hypergraph.pb.h LanguageModelSRI.h \
	LanguageModelParallelBackoff.h LanguageModelIRST.h \
	LanguageModelRandLM.h NGramCollection.h NGramNode.h
HEADERS = $(libmoses_la_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BOOST_CPPFLAGS = @BOOST_CPPFLAGS@
BOOST_ROOT = @BOOST_ROOT@
BOOST_THREAD_LDFLAGS = @BOOST_THREAD_LDFLAGS@
BOOST_THREAD_LIBS = @BOOST_THREAD_LIBS@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DISTCHECK_CONFIGURE_FLAGS = @DISTCHECK_CONFIGURE_FLAGS@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
KENLM_DEPS = @KENLM_DEPS@
KENLM_LDFLAGS = @KENLM_LDFLAGS@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PROTOC = @PROTOC@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
XMLRPC_C_CPPFLAGS = @XMLRPC_C_CPPFLAGS@
XMLRPC_C_LIBS = @XMLRPC_C_LIBS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
lib_LTLIBRARIES = libmoses.la
AM_CPPFLAGS = -W -Wall -ffor-scope -D_FILE_OFFSET_BITS=64 -D_LARGE_FILES $(BOOST_CPPFLAGS)
libmoses_ladir = ${includedir}
libmoses_la_HEADERS = AlignmentInfo.h BilingualDynSuffixArray.h \
	BitmapContainer.h CellCollection.h ChartTranslationOption.h \
	ChartTranslationOptionList.h ConfusionNet.h DecodeFeature.h \
	DecodeGraph.h DecodeStep.h DecodeStepGeneration.h \
	DecodeStepTranslation.h Dictionary.h DotChart.h \
	DotChartOnDisk.h DummyScoreProducers.h DynSAInclude/file.h \
	DynSAInclude/vocab.h DynSuffixArray.h FFState.h Factor.h \
	FactorCollection.h FactorTypeSet.h FeatureFunction.h File.h \
	FilePtr.h FloydWarshall.h GenerationDictionary.h \
	GlobalLexicalModel.h gzfilebuf.h hash.h Hypothesis.h \
	HypothesisStack.h HypothesisStackCubePruning.h \
	HypothesisStackNormal.h InputFileStream.h InputType.h LMList.h \
	LVoc.h LanguageModel.h LanguageModelJoint.h \
	LanguageModelFactory.h LanguageModelImplementation.h \
	LanguageModelInternal.h LanguageModelMultiFactor.h \
	LanguageModelRemote.h LanguageModelSingleFactor.h \
	LanguageModelSkip.h LexicalReordering.h \
	LexicalReorderingState.h LexicalReorderingTable.h Manager.h \
	NonTerminal.h ObjectPool.h PCNTools.h PDTAimp.h Parameter.h \
	PartialTranslOptColl.h Phrase.h PhraseDictionary.h \
	PhraseDictionaryDynSuffixArray.h PhraseDictionaryMemory.h \
	PhraseDictionarySCFG.h PhraseDictionaryNode.h \
	PhraseDictionaryNodeSCFG.h PhraseDictionaryOnDisk.h \
	PhraseDictionaryTree.h PhraseDictionaryTreeAdaptor.h \
	PrefixTree.h PrefixTreeMap.h ReorderingConstraint.h \
	ReorderingStack.h ScoreComponentCollection.h \
	ScoreIndexManager.h ScoreProducer.h Search.h \
	SearchCubePruning.h SearchNormal.h Sentence.h SentenceStats.h \
	SquareMatrix.h StaticData.h TargetPhrase.h \
	TargetPhraseCollection.h Timer.h TranslationOption.h \
	TranslationOptionCollection.h \
	TranslationOptionCollectionConfusionNet.h \
	TranslationOptionCollectionText.h TranslationOptionList.h \
	TranslationSystem.h TreeInput.h TrellisPath.h \
	TrellisPathCollection.h TrellisPathList.h TypeDef.h \
	UniqueObject.h UserMessage.h Util.h Word.h WordConsumed.h \
	WordLattice.h WordsBitmap.h WordsRange.h XmlOption.h \
	$(am__append_1) $(am__append_2) $(am__append_3) \
	$(am__append_4) $(am__append_5)
libmoses_la_SOURCES = AlignmentInfo.cpp BilingualDynSuffixArray.cpp \
	BitmapContainer.cpp ChartTranslationOption.cpp \
	ChartTranslationOptionList.cpp ConfusionNet.cpp \
	DecodeFeature.cpp DecodeGraph.cpp DecodeStep.cpp \
	DecodeStepGeneration.cpp DecodeStepTranslation.cpp \
	Dictionary.cpp DotChart.cpp DotChartOnDisk.cpp \
	DummyScoreProducers.cpp DynSAInclude/file.cpp \
	DynSAInclude/vocab.cpp DynSuffixArray.cpp FFState.cpp \
	Factor.cpp FactorCollection.cpp FactorTypeSet.cpp \
	FeatureFunction.cpp FloydWarshall.cpp GenerationDictionary.cpp \
	GlobalLexicalModel.cpp hash.cpp Hypothesis.cpp \
	HypothesisStack.cpp HypothesisStackCubePruning.cpp \
	HypothesisStackNormal.cpp InputFileStream.cpp InputType.cpp \
	LMList.cpp LVoc.cpp LanguageModel.cpp LanguageModelFactory.cpp \
	LanguageModelImplementation.cpp LanguageModelInternal.cpp \
	LanguageModelJoint.cpp LanguageModelMultiFactor.cpp \
	LanguageModelRemote.cpp LanguageModelSingleFactor.cpp \
	LanguageModelSkip.cpp LexicalReordering.cpp \
	LexicalReorderingState.cpp LexicalReorderingTable.cpp \
	Manager.cpp NGramCollection.cpp NGramNode.cpp PCNTools.cpp \
	Parameter.cpp PartialTranslOptColl.cpp Phrase.cpp \
	PhraseDictionary.cpp PhraseDictionaryDynSuffixArray.cpp \
	PhraseDictionaryMemory.cpp PhraseDictionarySCFG.cpp \
	PhraseDictionarySCFGChart.cpp PhraseDictionaryNode.cpp \
	PhraseDictionaryNodeSCFG.cpp PhraseDictionaryOnDisk.cpp \
	PhraseDictionaryOnDiskChart.cpp PhraseDictionaryTree.cpp \
	PhraseDictionaryTreeAdaptor.cpp PrefixTreeMap.cpp \
	ReorderingConstraint.cpp ReorderingStack.cpp \
	ScoreComponentCollection.cpp ScoreIndexManager.cpp \
	ScoreProducer.cpp Search.cpp SearchCubePruning.cpp \
	SearchNormal.cpp Sentence.cpp SentenceStats.cpp \
	SquareMatrix.cpp StaticData.cpp TargetPhrase.cpp \
	TargetPhraseCollection.cpp Timer.cpp TranslationOption.cpp \
	TranslationOptionCollection.cpp \
	TranslationOptionCollectionConfusionNet.cpp \
	TranslationOptionCollectionText.cpp TranslationOptionList.cpp \
	TranslationSystem.cpp TreeInput.cpp TrellisPath.cpp \
	TrellisPathCollection.cpp UserMessage.cpp Util.cpp Word.cpp \
	WordConsumed.cpp WordLattice.cpp WordsBitmap.cpp \
	WordsRange.cpp XmlOption.cpp $(am__append_6) $(am__append_7) \
	$(am__append_8) $(am__append_9) $(am__append_10) \
	$(am__append_11)
@PROTOBUF_TRUE@BUILT_SOURCES = \
@PROTOBUF_TRUE@  rule.pb.h \
@PROTOBUF_TRUE@  rule.pb.cc \
@PROTOBUF_TRUE@  hypergraph.pb.h \
@PROTOBUF_TRUE@  hypergraph.pb.cc

@PROTOBUF_TRUE@CLEANFILES = $(BUILT_SOURCES)
@PROTOBUF_TRUE@SUFFIXES = .proto
libmoses_la_LIBADD = $(BOOST_THREAD_LDFLAGS) $(BOOST_THREAD_LIBS)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .proto .cc .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu moses/src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu moses/src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libmoses.la: $(libmoses_la_OBJECTS) $(libmoses_la_DEPENDENCIES) 
	$(CXXLINK) -rpath $(libdir) $(libmoses_la_OBJECTS) $(libmoses_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/AlignmentInfo.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BilingualDynSuffixArray.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/BitmapContainer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ChartTranslationOption.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ChartTranslationOptionList.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ConfusionNet.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DecodeFeature.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DecodeGraph.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DecodeStep.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DecodeStepGeneration.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DecodeStepTranslation.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Dictionary.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DotChart.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DotChartOnDisk.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DummyScoreProducers.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DynSuffixArray.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FFState.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Factor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FactorCollection.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FactorTypeSet.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FeatureFunction.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FloydWarshall.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GenerationDictionary.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/GlobalLexicalModel.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Hypothesis.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/HypothesisStack.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/HypothesisStackCubePruning.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/HypothesisStackNormal.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/InputFileStream.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/InputType.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LMList.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LVoc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LanguageModel.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LanguageModelFactory.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LanguageModelIRST.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LanguageModelImplementation.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LanguageModelInternal.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LanguageModelJoint.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LanguageModelKen.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LanguageModelMultiFactor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LanguageModelParallelBackoff.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LanguageModelRandLM.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LanguageModelRemote.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LanguageModelSRI.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LanguageModelSingleFactor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LanguageModelSkip.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LexicalReordering.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LexicalReorderingState.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/LexicalReorderingTable.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Manager.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/NGramCollection.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/NGramNode.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PCNTools.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Parameter.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PartialTranslOptColl.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Phrase.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PhraseDictionary.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PhraseDictionaryDynSuffixArray.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PhraseDictionaryMemory.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PhraseDictionaryNode.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PhraseDictionaryNodeSCFG.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PhraseDictionaryOnDisk.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PhraseDictionaryOnDiskChart.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PhraseDictionarySCFG.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PhraseDictionarySCFGChart.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PhraseDictionaryTree.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PhraseDictionaryTreeAdaptor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/PrefixTreeMap.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ReorderingConstraint.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ReorderingStack.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ScoreComponentCollection.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ScoreIndexManager.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ScoreProducer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Search.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SearchCubePruning.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SearchNormal.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Sentence.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SentenceStats.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/SquareMatrix.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/StaticData.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TargetPhrase.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TargetPhraseCollection.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Timer.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TranslationOption.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TranslationOptionCollection.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TranslationOptionCollectionConfusionNet.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TranslationOptionCollectionText.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TranslationOptionList.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TranslationSystem.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TreeInput.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TrellisPath.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TrellisPathCollection.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/UserMessage.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Util.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Word.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/WordConsumed.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/WordLattice.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/WordsBitmap.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/WordsRange.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/XmlOption.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/file.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hash.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hypergraph.pb.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rule.pb.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/vocab.Plo@am__quote@

.cc.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

file.lo: DynSAInclude/file.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT file.lo -MD -MP -MF $(DEPDIR)/file.Tpo -c -o file.lo `test -f 'DynSAInclude/file.cpp' || echo '$(srcdir)/'`DynSAInclude/file.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/file.Tpo $(DEPDIR)/file.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='DynSAInclude/file.cpp' object='file.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o file.lo `test -f 'DynSAInclude/file.cpp' || echo '$(srcdir)/'`DynSAInclude/file.cpp

vocab.lo: DynSAInclude/vocab.cpp
@am__fastdepCXX_TRUE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT vocab.lo -MD -MP -MF $(DEPDIR)/vocab.Tpo -c -o vocab.lo `test -f 'DynSAInclude/vocab.cpp' || echo '$(srcdir)/'`DynSAInclude/vocab.cpp
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/vocab.Tpo $(DEPDIR)/vocab.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='DynSAInclude/vocab.cpp' object='vocab.lo' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o vocab.lo `test -f 'DynSAInclude/vocab.cpp' || echo '$(srcdir)/'`DynSAInclude/vocab.cpp

.cpp.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-libmoses_laHEADERS: $(libmoses_la_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(libmoses_ladir)" || $(MKDIR_P) "$(DESTDIR)$(libmoses_ladir)"
	@list='$(libmoses_la_HEADERS)'; test -n "$(libmoses_ladir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(libmoses_ladir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(libmoses_ladir)" || exit $$?; \
	done

uninstall-libmoses_laHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libmoses_la_HEADERS)'; test -n "$(libmoses_ladir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(libmoses_ladir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(libmoses_ladir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(libmoses_ladir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-libmoses_laHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLTLIBRARIES uninstall-libmoses_laHEADERS

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLTLIBRARIES clean-libtool ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am \
	install-libLTLIBRARIES install-libmoses_laHEADERS install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-libLTLIBRARIES uninstall-libmoses_laHEADERS


@PROTOBUF_TRUE@rule.pb.cc: rule.proto
@PROTOBUF_TRUE@	@PROTOC@ --cpp_out=. $<
@PROTOBUF_TRUE@rule.pb.h: rule.proto
@PROTOBUF_TRUE@	@PROTOC@ --cpp_out=. $<

@PROTOBUF_TRUE@hypergraph.pb.cc: hypergraph.proto
@PROTOBUF_TRUE@	@PROTOC@ --cpp_out=. $<			
@PROTOBUF_TRUE@hypergraph.pb.h: hypergraph.proto
@PROTOBUF_TRUE@	@PROTOC@ --cpp_out=. $<			

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
