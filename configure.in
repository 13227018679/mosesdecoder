AC_INIT(moses/src)

AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(moses, 0.1)

AC_PROG_CXX
AC_LANG_CPLUSPLUS
AC_PROG_RANLIB
#AM_PROG_LIBTOOL

AC_ARG_WITH(protobuf,
            [AC_HELP_STRING([--with-protobuf=PATH], [(optional) path to Google protobuf])],
            [with_protobuf=$withval],
            [with_protobuf=no]
           )

AC_ARG_WITH(srilm,
            [AC_HELP_STRING([--with-srilm=PATH], [(optional) path to SRI's LM toolkit])],
            [with_srilm=$withval],
            [with_srilm=no]
           )

AC_ARG_WITH(irstlm,
            [AC_HELP_STRING([--with-irstlm=PATH], [(optional) path to IRST's LM toolkit])],
            [with_irstlm=$withval],
            [with_irstlm=no]
           )

AC_ARG_ENABLE(profiling,
            [AC_HELP_STRING([--enable-profiling], [moses will dump profiling info])],
            [CPPFLAGS="$CPPFLAGS -pg"; LDFLAGS="$LDFLAGS -pg" ]
           )

AC_ARG_ENABLE(optimization,
            [AC_HELP_STRING([--enable-optimization], [compile with -O3 flag])],
            [CPPFLAGS="$CPPFLAGS -O3"; LDFLAGS="$LDFLAGS -O3" ]
           )

AC_ARG_WITH(berkeleydb,
            [AC_HELP_STRING([--with-berkeleydb=PATH], [(optional) path to root of Berkeley Db])],
            [with_berkeleydb=$withval],
            [with_berkeleydb=no]
           )


AM_CONDITIONAL([INTERNAL_LM], false)
AM_CONDITIONAL([SRI_LM], false)
AM_CONDITIONAL([IRST_LM], false)
AM_CONDITIONAL([PROTOBUF], false)
AM_CONDITIONAL([BERKELEYDB], false)

if test "x$with_protobuf" != 'xno'
then
  SAVE_CPPFLAGS="$CPPFLAGS"
  CPPFLAGS="$CPPFLAGS -I${with_protobuf}/include"

  AC_CHECK_HEADER(google/protobuf/message.h,
                 [AC_DEFINE([HAVE_PROTOBUF], [], [flag for protobuf])],
                 [AC_MSG_ERROR([Cannot find protobuf!])])

  LIB_PROTOBUF="-lprotobuf"
  LDFLAGS="$LDFLAGS -L${with_protobuf}/lib"
  LIBS="$LIBS $LIB_PROTOBUF"
  AC_PATH_PROG(PROTOC,protoc,,"${PATH}:${with_protobuf}/bin")
  FMTLIBS="$FMTLIBS libprotobuf.a"
  AM_CONDITIONAL([PROTOBUF], true)
fi

if test "x$with_srilm" != 'xno'
then
  SAVE_CPPFLAGS="$CPPFLAGS"
  CPPFLAGS="$CPPFLAGS -I${with_srilm}/include"

  AC_CHECK_HEADER(Ngram.h,
                 [AC_DEFINE([HAVE_SRILM], [], [flag for SRILM])],
                 [AC_MSG_ERROR([Cannot find SRILM!])])

  LIB_SRILM="-loolm -ldstruct -lmisc"
  # ROOT/lib/i686-m64/liboolm.a
  # ROOT/lib/i686-m64/libdstruct.a
  # ROOT/lib/i686-m64/libmisc.a
  MY_ARCH=`${with_srilm}/sbin/machine-type`
  LDFLAGS="$LDFLAGS -L${with_srilm}/lib/${MY_ARCH}"
  LIBS="$LIBS $LIB_SRILM"
  FMTLIBS="$FMTLIBS liboolm.a libdstruct.a libmisc.a"
  AM_CONDITIONAL([SRI_LM], true)
fi

if test "x$with_irstlm" != 'xno'
then
  SAVE_CPPFLAGS="$CPPFLAGS"
  CPPFLAGS="$CPPFLAGS -I${with_irstlm}/include"

  AC_CHECK_HEADER(n_gram.h,
                 [AC_DEFINE([HAVE_IRSTLM], [], [flag for IRSTLM])],
                 [AC_MSG_ERROR([Cannot find IRST-LM!])])

  if test $MACHTYPE
  then
    MY_ARCH=$MACHTYPE
    echo $ECHO_N "THEN -> MY_ARCH=$MY_ARCH" >&6
  else
    MY_ARCH=`uname -m`
    echo $ECHO_N "ELSE -> MY_ARCH=$MY_ARCH\n" >&6
  fi

  LIB_IRSTLM="-lirstlm"
  LDFLAGS="$LDFLAGS -L${with_irstlm}/lib/${MY_ARCH}"
  LIBS="$LIBS $LIB_IRSTLM"
  FMTLIBS="$FMTLIBS libirstlm.a"
  AM_CONDITIONAL([IRST_LM], true)
fi

if test "x$with_berkeleydb" != 'xno'
then
  SAVE_CPPFLAGS="$CPPFLAGS"
  CPPFLAGS="$CPPFLAGS -I${with_berkeleydb}/include"

  AC_CHECK_HEADER(db_cxx.h,
                 [AC_DEFINE([HAVE_BERKELEYDB], [], [flag for BERKELEYDB])],
                 [AC_MSG_ERROR([Cannot find Berkeley Db!])])

  LDFLAGS="$LDFLAGS -L${with_berkeleydb}/lib"
  FMTLIBS="$FMTLIBS libdb_cxx.a"
  AM_CONDITIONAL([BERKELEYDB], true)

fi

LIBS="$LIBS -lz -ldb_cxx -lpthread"

AC_OUTPUT(Makefile BerkeleyPt/src/Makefile CreateBerkeleyPt/src/Makefile  moses/src/Makefile moses-cmd/src/Makefile misc/Makefile moses-chart/src/Makefile moses-chart-cmd/src/Makefile)
